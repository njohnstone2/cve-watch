package main

import (
	"testing"

	"github.com/njohnstone2/cve-watch/internal/nvd"
	"github.com/slack-go/slack"
	"github.com/stretchr/testify/assert"
)

var cve = nvd.CVE{
	ID:               "CVE-2023-23952",
	SourceIdentifier: "secure@example.com",
	Published:        "2023-06-01T01:15:17.687",
	LastModified:     "2023-06-06T14:30:45.323",
	VulnStatus:       "Analyzed",
	Descriptions:     []nvd.Description{{Lang: "en", Value: "Example description"}},
	Metrics: nvd.Metric{
		CvssMetricV31: []nvd.CvssMetricV31{
			{
				Source: "NVD",
				CvssData: nvd.CvssData{
					AttackVector: "NETWORK",
					BaseScore:    9.8,
					BaseSeverity: "CRITICAL",
				},
			},
		},
	},
	Weaknesses: []nvd.Weakness{
		{},
	},
	References: []nvd.Reference{},
}

func TestBuildMessage(t *testing.T) {
	t.Run("Build CVE Message", func(t *testing.T) {

		msg := buildMessage(cve)

		assert.Equal(t, len(msg.Blocks.BlockSet), 4)
		assert.Equal(t, msg.Blocks.BlockSet[0].BlockType(), slack.MBTHeader)
		assert.Equal(t, msg.Blocks.BlockSet[1].BlockType(), slack.MBTSection)
		assert.Equal(t, msg.Blocks.BlockSet[2].BlockType(), slack.MBTSection)
		assert.Equal(t, msg.Blocks.BlockSet[3].BlockType(), slack.MBTSection)
	})
}
